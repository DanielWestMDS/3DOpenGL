#version 460 core

// Vertex Data Interpretation
layout (location = 0) in vec3 Position;
layout (location = 1) in vec3 Color;

// Inputs
//uniform mat4 TranslationMat;
//uniform mat4 RotationMat;
//uniform mat4 ScaleMat;
uniform mat4 QuadModelMat;
uniform mat4 ProjectionMat;
uniform mat4 ViewMat;
uniform vec3 SecondColor;
uniform float CurrentTime;

// Outputs to Fragment Shader
out vec3 FragColor;

// Shader Functionality
void main()
{
	gl_Position = ProjectionMat * ViewMat * QuadModelMat * vec4(Position, 1.0f);
	//FragColor = Color;
	FragColor = mix(Color, SecondColor, (sin(CurrentTime) * cos(CurrentTime) + 0.5));
} 